openapi: 3.0.3
info:
  version: "1.0.0"
  title: PP REST API Docs
  description: |-
    해당 문서는 PP REST API 명세애 대한 문서입니다.

tags:
  - name: 인증
    description: 인증 API
  - name: 파일 업로드
    description: 파일 업로드 API
  - name: 유저
    description: 유저 API
  - name: 커뮤니티
    description: 커뮤니티 API
  - name: 기타
    description: 공지사항 API

paths:
  /oauth2/token:
    post:
      tags:
        - 인증
      summary: 토큰 발급
      description: |-
        API 사용을 위한 엑세스 토큰과 엑세스 토큰을 갱신할 수 있는 리프레시 토큰을 발급합니다.
        
        kakao, apple 로그인 후, 발급된 3rd-party JWT 서명 토큰(id_token)을 전달하여 엑세스 토큰과 리프레시 토큰을 발급합니다.
        - client_id(Required): kauth.kakao.com 또는 appleid.apple.com
        - grant_type(Required): client_credentials
        - client_assertion(Required): 3rd-party JWT 서명 토큰(id_token)
        - client_assertion_type(Required): urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        - authorization_code(Required only apple case): 인가 코드
        - scope(Optional): user.read user.write
        
        엑세스 토큰이 만료되면 리프레시 토큰을 전달하여 엑세스 토큰과 리프레시 토큰을 재발급합니다.
        - client_id(Required): kauth.kakao.com 또는 appleid.apple.com
        - grant_type(Required): refresh_token
        - refresh_token(Required): 리프레시 토큰
        - scope(Optional): user.read user.write
        
        아래는 발급된 PP API 접근 엑세스 토큰(JWT) claims 예시입니다.
        ```json
        {
          "sub": "1",
          "aud": "https://pp-api.kro.kr",
          "nbf": 1712984735,
          "scope": [
            "user.read",
            "user.write"
          ],
          "iss": "https://pp-api.kro.kr",
          "exp": 1712985035,
          "iat": 1712984735,
          "jti": "e82b8142-2018-455d-92d8-149bce81ec7f"
        }
        ```
        - sub(Required): 토큰을 발급한 유저를 식별할 수 있는 id(userId)
        - aub(Required): 토큰의 대상자
        - nbf(Required): 토큰의 활성화 날짜
        - scope(Optional): 토큰으로 리소스에 접근할 수 있는 권한 범위
        - iss(Required): 토큰의 발급자
        - exp(Required): 토큰의 만료시간
        - iat(Required): 토큰이 발급된 시간
        - jti(Required): JWT 서명 키페어를 식별할 수 있는 id
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: |-
                    권한 부여 유형
                    - client_credentials
                    - refresh_token
                  example: client_credentials
                client_id:
                  type: string
                  description: |-
                    클라이언트 id
                    - kauth.kakao.com
                    - appleid.apple.com
                  example: kauth.kakao.com
                client_assertion:
                  type: string
                  description: 3rd-party JWT 서명 토큰(id_token)
                client_assertion_type:
                  type: string
                  description: urn:ietf:params:oauth:client-assertion-type:jwt-bearer 고정
                  example: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
                authorization_code:
                  type: string
                  description: 인가 코드
                scope:
                  type: string
                  description: |-
                    권한 범위
                    - user.read
                    - user.write
                    - post.read
                    - post.write
                    - file.write
                  example: user.read user.write
                refresh_token:
                  type: string
                  description: 리프레시 토큰
              required:
                - grant_type
                - client_id
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: 엑세스 토큰
                  refresh_token:
                    type: string
                    description: 리프레시 토큰
                  scope:
                    type: string
                    description: |-
                      권한 범위
                      - user.read
                      - user.write
                      - post.read
                      - post.write
                      - file.write
                  token_type:
                    type: string
                    description: 토큰 유형(Bearer 고정)
                  expires_in:
                    type: integer
                    description: 토큰의 유효 시간(초)
                required:
                  - access_token
                  - refresh_token
                  - token_type
                  - expires_in
              examples:
                jwtBearerFlow:
                  value:
                    access_token: eyJraWQiOiIxYzAyZjMxYy1mMTU5LTQ5MDQtOTJjZC0zZGZiOGFiZGU0MTIiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJrYXV0aC5rYWthby5jb20iLCJhdWQiOiJrYXV0aC5rYWthby5jb20iLCJuYmYiOjE3MTIzMjQzOTksInVzZXJfaWQiOjEsInNjb3BlIjpbInVzZXIucmVhZCIsInVzZXIud3JpdGUiXSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwIiwiZXhwIjoxNzEyMzI0Njk5LCJpYXQiOjE3MTIzMjQzOTksImp0aSI6ImFiN2VhODI2LWFjYmUtNDcwMC1iNDdkLThmMWFiMDc3ZjJkMyJ9.Sq_cf7KS0ukMQvcYSecyVruQavBk92Lnly_YgnTSNAefIAQqeuPeOXFrKUjrrosbKyCmfKhljmwMSdCiSZ-d4dSoGDFSOLPoG8mc10r_cErQaN0EJFnfUylsu1HCAjBu6PBEMEMys3r02dWKt5cmyhPvLo9mobHJt-wYOqpkbLumNXngiCn-6U2hQmc9JKbwWtcyV2YR1BxuUzA86dY3565E2P_fu9c1h7EG5NYrliuTQGx4ZwMRIVpfF3rLOVHHXdrCrfuw32SuO1Zpf4DAoJ_tmqhm5TrSXC2ofnK57i9ot_9Mb28F3CiGEijTh6vBLvuohoZaWYRSutH3OEOysQ
                    refresh_token: 9r7r-Ar5Qr5uWisFPEiHg032J8U3PXsyJ2mUUp-2-raijR9V7hmr1YtVzB5caGiw_xoSDWAIxxHWlt8gOE2eQNrzZgsaMCy9C6i3uZ0neHLoTnDZVcXlob3ARvvBYA3b
                    scope: user.read user.write
                    token_type: Bearer
                    expires_in: 299
                refreshTokenFlow:
                  value:
                    access_token: eyJraWQiOiIxYzAyZjMxYy1mMTU5LTQ5MDQtOTJjZC0zZGZiOGFiZGU0MTIiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJrYXV0aC5rYWthby5jb20iLCJhdWQiOiJrYXV0aC5rYWthby5jb20iLCJuYmYiOjE3MTIzMjQzOTksInVzZXJfaWQiOjEsInNjb3BlIjpbInVzZXIucmVhZCIsInVzZXIud3JpdGUiXSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwIiwiZXhwIjoxNzEyMzI0Njk5LCJpYXQiOjE3MTIzMjQzOTksImp0aSI6ImFiN2VhODI2LWFjYmUtNDcwMC1iNDdkLThmMWFiMDc3ZjJkMyJ9.Sq_cf7KS0ukMQvcYSecyVruQavBk92Lnly_YgnTSNAefIAQqeuPeOXFrKUjrrosbKyCmfKhljmwMSdCiSZ-d4dSoGDFSOLPoG8mc10r_cErQaN0EJFnfUylsu1HCAjBu6PBEMEMys3r02dWKt5cmyhPvLo9mobHJt-wYOqpkbLumNXngiCn-6U2hQmc9JKbwWtcyV2YR1BxuUzA86dY3565E2P_fu9c1h7EG5NYrliuTQGx4ZwMRIVpfF3rLOVHHXdrCrfuw32SuO1Zpf4DAoJ_tmqhm5TrSXC2ofnK57i9ot_9Mb28F3CiGEijTh6vBLvuohoZaWYRSutH3OEOysQ
                    refresh_token: 9r7r-Ar5Qr5uWisFPEiHg032J8U3PXsyJ2mUUp-2-raijR9V7hmr1YtVzB5caGiw_xoSDWAIxxHWlt8gOE2eQNrzZgsaMCy9C6i3uZ0neHLoTnDZVcXlob3ARvvBYA3b
                    scope: user.read user.write
                    token_type: Bearer
                    expires_in: 299
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth2ErrorResponse'
              examples:
                Oauth2ErrorInvalidRequestExample:
                  $ref: '#/components/examples/Oauth2ErrorInvalidRequestExample'
                Oauth2ErrorServerErrorExample:
                  $ref: '#/components/examples/Oauth2ErrorServerErrorExample'


  /oauth2/revoke:
    post:
      tags:
        - 인증
      summary: 토큰 무효화
      description: |-
        PP 서버 API 사용을 위한 엑세스 토큰 또는 리프레시 토큰을 무효화합니다.

        - client_id(Required): kauth.kakao.com 또는 appleid.apple.com
        - token(Required): access_token 또는 refresh_token
        - token_type_hint(Optional): access_token 또는 refresh_token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  description: |-
                    클라이언트 id
                    - kauth.kakao.com
                    - appleid.apple.com
                  example: kauth.kakao.com
                token:
                  type: string
                  description: 무효화 대상 토큰
                token_type_hint:
                  type: string
                  description: |-
                    토큰 타입
                    - access_token
                    - refresh_token
                  example: refresh_token
              required:
                - client_id
                - token
                - token_type_hint
      responses:
        200:
          description: ''
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth2ErrorResponse'
              examples:
                Oauth2ErrorInvalidRequestExample:
                  $ref: '#/components/examples/Oauth2ErrorInvalidRequestExample'
                Oauth2ErrorServerErrorExample:
                  $ref: '#/components/examples/Oauth2ErrorServerErrorExample'

  /api/v1/presigned/upload-urls:
    post:
      security:
        - bearerToken: [ ]
      tags:
        - 파일 업로드
      summary: 파일 업로드를 위한 서명된 URL 생성
      description: |-
        파일 업로드를 위한 서명된 URL을 생성합니다.
        
        자세한 내용은 외부 문서를 참조해주세요.
        - [AWS S3 Manual - Uploading Objects with presigned URLs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/PresignedUrlUploadObject.html)
        - [The illustrated guide to S3 pre-signed URLs](https://fourtheorem.com/the-illustrated-guide-to-s3-pre-signed-urls/)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                presignedUploadUrlRequests:
                  type: array
                  description: 파일 업로드 url 서명 요청
                  minimum: 1
                  maximum: 10
                  items:
                    type: object
                    properties:
                      fileUploadRequestType:
                        type: string
                        description: |-
                          파일 업로드 유형
                          - PROFILE_IMAGE
                          - POST_IMAGE
                      fileContentLength:
                        type: integer
                        description: |-
                          Content-Length(bytes)
                          - PROFILE_IMAGE: 최대 1048576 bytes(1mb)
                          - POST_IMAGE: 최대 1048576 bytes(1mb)
                      fileContentType:
                        type: string
                        description: |-
                          Content-Type
                          - PROFILE_IMAGE:
                            - image/gif
                            - image/png
                            - image/jpeg
                          - POST_IMAGE: 
                            - image/gif
                            - image/png
                            - image/jpeg
                    required:
                      - fileUploadRequestType
                      - fileContentLength
                      - fileContentType
                  example:
                    - fileUploadRequestType: PROFILE_IMAGE
                      fileContentLength: 500000
                      fileContentType: image/png
                    - fileUploadRequestType: POST_IMAGE
                      fileContentLength: 650000
                      fileContentType: image/jpeg
              required:
                - presignedUploadUrlRequests
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      presignedUploadUrlResponses:
                        type: array
                        description: 파일 업로드 url 서명 응답
                        items:
                          type: object
                          properties:
                            fileUploadId:
                              type: integer
                              description: 파일 업로드 id
                            presignedUploadUrl:
                              type: string
                              description: 서명된 파일 업로드 url
                            fileUrl:
                              type: string
                              description: 파일 url
                          required:
                            - fileUploadId
                            - presignedUploadUrl
                            - fileUrl
                        example:
                          - fileUploadId: 1
                            presignedUploadUrl: https://pp-public-bucket.s3.ap-northeast-2.amazonaws.com/example.png?response-content-disposition=inline&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aDmFwLW5vcnRoZWFzdC0yIkYwRAIgOF4z5YJLMI1YQsfDsOu3ItBFpvDAMWHNT%2BJFqA2EHzQCICSHWV3QpnyDPwfp6eGWYmrBl5NMZn9JC%2FaOUhMlhv2OKpIDCKj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNzMwMzM1NTk0MTg2IgzvG6wQSpimxC7HWRsq5gK%2BszFeBYYK3QvsZZ40%2Fm1EPdSzYWmasXWgjM2879zl7Cp66x%2F8HRa6BCQSsyMdP9gMPn5MifObVLqFS8owu7e4uH68tbfmSF1ipFwr%2BMl3DS5DQUCTaRraoi%2F2PTTEHRHtA1dbE6XfXttkRQYkaEIKvR3X44sMlqI2rKOQtpFU5g5%2BzEG7NQHeIbgPMThPBXT%2Bu8IgqOaKyqaKLTTjjUcCBhoYaToDeOaZbFIElmdLADswM34ID5jCt3jPOGlBX04GI8X%2BXbtzyIeDH2ihmWDejpGv8%2BUx9v%2F%2BHX80PnZkUUyz1f8KjweBETyJHiZTFxxtJ6nG3Y%2Bs0LVgLshHWa5Md1HG11ASlNFT%2BSuKzPfQqiohAzeP%2Ff7CLFUlDQmB2kcNKwGAFgDUmMF%2FNC1ePM%2BiwL%2F6BGtbJu9gbu6PHj0%2FuUGQuKar0xd5azhWxM9bpZ2Gn7YBGbAPwVUsS1YEYr0OMgzNEr9sMK6UwLAGOrQCPN2SL1x7N%2FrRXPUw98if3xLq9iLosA4oPUCGxVzzGUX2L88Fq2l4qJTRo85qI%2Fc%2BEWz7WBufa2XsnMMMh8lXADb1UkLxLEOHr5pIWUroWM0uzGp%2FuvpoMmEFZieKu9cGrC%2FqOFo%2BGL3lN%2B9vZcEb3w2SpeImGDdataWOUB3njXoNhYx8Oyxv87aWhXQjIp96PUhmVaVPOkfMY%2FySz97TqXTxNh7gSW95ch2QJa1xmR%2FXHBKB7HuYEWGODNuEa8PSARBeKpXy7S1WoHgPcCHCzmrVcGMA6H9nfSxnBzwKqR%2FahzbqbEUIa5kXYLwll%2FQAI%2BNKhyFya9HzDl5f9sAXdt1hfQ9dwM2WdDB4mQxnESgPsBe%2F4MtXr%2Btvs8qqD0XLeu35c89wjDOb4osHDJLevfkPvPE%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20240405T142839Z&X-Amz-SignedHeaders=host&X-Amz-Expires=60&X-Amz-Credential=ASIA2UC3EY3FFAXNMRH5%2F20240405%2Fap-northeast-2%2Fs3%2Faws4_request&X-Amz-Signature=6e710f43b229be2a5b63e543c9d61b2dbc66bd2b5035b55c207cce060eacd480
                            fileUrl: https://pp-public-bucket.s3.ap-northeast-2.amazonaws.com/example.png
                          - fileUploadId: 2
                            presignedUploadUrl: https://pp-public-bucket.s3.ap-northeast-2.amazonaws.com/example2.png?response-content-disposition=inline&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aDmFwLW5vcnRoZWFzdC0yIkYwRAIgOF4z5YJLMI1YQsfDsOu3ItBFpvDAMWHNT%2BJFqA2EHzQCICSHWV3QpnyDPwfp6eGWYmrBl5NMZn9JC%2FaOUhMlhv2OKpIDCKj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNzMwMzM1NTk0MTg2IgzvG6wQSpimxC7HWRsq5gK%2BszFeBYYK3QvsZZ40%2Fm1EPdSzYWmasXWgjM2879zl7Cp66x%2F8HRa6BCQSsyMdP9gMPn5MifObVLqFS8owu7e4uH68tbfmSF1ipFwr%2BMl3DS5DQUCTaRraoi%2F2PTTEHRHtA1dbE6XfXttkRQYkaEIKvR3X44sMlqI2rKOQtpFU5g5%2BzEG7NQHeIbgPMThPBXT%2Bu8IgqOaKyqaKLTTjjUcCBhoYaToDeOaZbFIElmdLADswM34ID5jCt3jPOGlBX04GI8X%2BXbtzyIeDH2ihmWDejpGv8%2BUx9v%2F%2BHX80PnZkUUyz1f8KjweBETyJHiZTFxxtJ6nG3Y%2Bs0LVgLshHWa5Md1HG11ASlNFT%2BSuKzPfQqiohAzeP%2Ff7CLFUlDQmB2kcNKwGAFgDUmMF%2FNC1ePM%2BiwL%2F6BGtbJu9gbu6PHj0%2FuUGQuKar0xd5azhWxM9bpZ2Gn7YBGbAPwVUsS1YEYr0OMgzNEr9sMK6UwLAGOrQCPN2SL1x7N%2FrRXPUw98if3xLq9iLosA4oPUCGxVzzGUX2L88Fq2l4qJTRo85qI%2Fc%2BEWz7WBufa2XsnMMMh8lXADb1UkLxLEOHr5pIWUroWM0uzGp%2FuvpoMmEFZieKu9cGrC%2FqOFo%2BGL3lN%2B9vZcEb3w2SpeImGDdataWOUB3njXoNhYx8Oyxv87aWhXQjIp96PUhmVaVPOkfMY%2FySz97TqXTxNh7gSW95ch2QJa1xmR%2FXHBKB7HuYEWGODNuEa8PSARBeKpXy7S1WoHgPcCHCzmrVcGMA6H9nfSxnBzwKqR%2FahzbqbEUIa5kXYLwll%2FQAI%2BNKhyFya9HzDl5f9sAXdt1hfQ9dwM2WdDB4mQxnESgPsBe%2F4MtXr%2Btvs8qqD0XLeu35c89wjDOb4osHDJLevfkPvPE%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20240405T142839Z&X-Amz-SignedHeaders=host&X-Amz-Expires=60&X-Amz-Credential=ASIA2UC3EY3FFAXNMRH5%2F20240405%2Fap-northeast-2%2Fs3%2Faws4_request&X-Amz-Signature=6e710f43b229be2a5b63e543c9d61b2dbc66bd2b5035b55c207cce060eacd480
                            fileUrl: https://pp-public-bucket.s3.ap-northeast-2.amazonaws.com/example2.png
                    required:
                      - presignedUploadUrlResponses
                required:
                  - data
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

  /api/v1/oauth2/{client}/users/registered:
    post:
      tags:
        - 유저
      summary: Oauth 로그인 회원 등록 여부 확인
      description: |-
        Oauth 로그인 회원의 등록 여부를 확인합니다.
      parameters:
        - in: path
          name: client
          schema:
            type: string
            enum:
              - kakao
              - apple
          required: true
          description: |-
            클라이언트
              - kakao
              - apple
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                idToken:
                  type: string
                  description: 3rd-party JWT 서명 토큰(id_token)
              required:
                - idToken
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      isRegistered:
                        type: boolean
                        description: 이미 등록되었는지 여부
                        example: false
                    required:
                      - isRegistered
                required:
                  - data
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'


  /api/v1/users/{userId}:
    patch:
      security:
        - bearerToken: [ ]
      tags:
        - 유저
      summary: 유저 정보 수정
      description: |-
        유저 정보를 수정합니다.
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: 유저 id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  description: 유저 닉네임
                  example: 바다거북맘
                profileImageFileUploadId:
                  type: integer
                  description: 프로필 이미지 업로드 id
                  example: 1
      responses:
        200:
          description: ''
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'
    delete:
      security:
        - bearerToken: [ ]
      tags:
        - 유저
      summary: 유저 탈퇴
      description: |-
        유저 정보를 삭제합니다.
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: 유저 id
      responses:
        200:
          description: ''
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

  /api/v1/users/{userId}/profiles:
    get:
      security:
        - bearerToken: [ ]
      tags:
        - 유저
      summary: 유저 프로필 조회
      description: |-
        유저의 프로필 정보를 조회합니다.
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: 유저 id
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: 유저 id
                            example: 1
                          nickname:
                            type: string
                            description: 유저 닉네임
                            example: sinbom
                          profileImageUrl:
                            type: integer
                            description: 프로필 이미지 url
                            example: https://avatars.githubusercontent.com/u/52724515
                          postCount:
                            type: integer
                            description: 게시글 수
                            example: 2
                          thumbsUpCount:
                            type: integer
                            description: 받은 좋아요 수
                            example: 1
                          posts:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: 게시글 id
                                thumbnailUrl:
                                  type: string
                                  description: 썸네일 url
                                title:
                                  type: string
                                  description: 제목
                                createDate:
                                  type: string
                                  description: 작성일
                              required:
                                - id
                                - thumbnailUrl
                                - title
                                - createDate
                            example:
                              - id: 3
                                thumbnailUrl: https://avatars.githubusercontent.com/u/52724515
                                title: 바다 거북이 본 날
                                createDate: 2024.03.30
                              - id: 2
                                thumbnailUrl: https://avatars.githubusercontent.com/u/52724515
                                title: 오늘 우리집에 햄스터를...
                                createDate: 2024.03.30
                              - id: 1
                                thumbnailUrl: https://avatars.githubusercontent.com/u/52724515
                                title: 문서 적는게 원래 이렇게 힘든...
                                createDate: 2024.02.12
                        required:
                          - id
                          - nickname
                          - profileImageUrl
                          - postCount
                          - thumbsUpCount
                          - posts
                    required:
                      - user
                required:
                  - data
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

  /api/v1/users/{userId}/posts:
    get:
      security:
        - bearerToken: [ ]
      tags:
        - 유저
      summary: 유저 커뮤니티 게시글 목록 조회
      description: |-
        유저가 등록한 커뮤니티 게시글을 조회합니다.
        
        최근 등록 내림차 순으로 정렬되어 조회됩니다.
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: 유저 id
        - in: query
          name: limit
          schema:
            type: integer
          description: |-
            조회 갯수
            - 기본 값 20
            - 최소 값 10
            - 최대 값 100
        - in: query
          name: lastId
          schema:
            type: integer
          description: |-
            마지막 조회 게시글 id
            - 만약 100을 입력했다면 다음 조회는 99부터 입니다.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      posts:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: 게시글 id
                            thumbnailUrl:
                              type: string
                              description: 썸네일 url
                            title:
                              type: string
                              description: 제목
                            createDate:
                              type: string
                          required:
                            - id
                            - thumbnailUrl
                            - title
                            - createDate
                        example:
                          - id: 3
                            thumbnailUrl: https://avatars.githubusercontent.com/u/52724515
                            title: 바다 거북이 본 날
                            createDate: 2024.03.30
                          - id: 2
                            thumbnailUrl: https://avatars.githubusercontent.com/u/52724515
                            title: 오늘 우리집에 햄스터를...
                            createDate: 2024.03.30
                          - id: 1
                            thumbnailUrl: https://avatars.githubusercontent.com/u/52724515
                            title: 문서 적는게 원래 이렇게 힘든...
                            createDate: 2024.02.12
                    required:
                      - posts
                required:
                  - data
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

  /api/v1/posts:
    get:
      security:
        - bearerToken: [ ]
      tags:
        - 커뮤니티
      summary: 커뮤니티 게시글 목록 조회
      description: |-
        커뮤니티에 등록된 유저의 게시글 목록을 조회합니다.
        
        최근 등록 내림차 순으로 정렬되어 조회됩니다.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: |-
            조회 갯수
            - 기본 값 20
            - 최소 값 10
            - 최대 값 100
        - in: query
          name: lastId
          schema:
            type: integer
          description: |-
            마지막 조회 게시글 id
            - 만약 100을 입력했다면 다음 조회는 99부터 입니다.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      posts:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: 게시글 id
                            thumbnailUrl:
                              type: string
                              description: 썸네일 url
                            title:
                              type: string
                              description: 제목
                            createDate:
                              type: string
                              description: 작성일
                          required:
                            - id
                            - thumbnailUrl
                            - title
                            - createDate
                        example:
                          - id: 3
                            thumbnailUrl: https://avatars.githubusercontent.com/u/52724515
                            title: 바다 거북이 본 날
                            createDate: 2024.03.30
                          - id: 2
                            thumbnailUrl: https://avatars.githubusercontent.com/u/52724515
                            title: 오늘 우리집에 햄스터를...
                            createDate: 2024.03.30
                          - id: 1
                            thumbnailUrl: https://avatars.githubusercontent.com/u/52724515
                            title: 문서 적는게 원래 이렇게 힘든...
                            createDate: 2024.02.12
                    required:
                      - posts
                required:
                  - data
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

    post:
      security:
        - bearerToken: [ ]
      tags:
        - 커뮤니티
      summary: 커뮤니티 게시글 작성
      description: |-
        커뮤니티에 등록될 유저의 게시글을 작성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 게시글 제목
                  example: 바다 거북이 본 날
                content:
                  type: integer
                  description: 게시글 내용
                  example: 바다 거북이가 생각보다 크진 않네?
                postImageFileUploadIds:
                  type: array
                  description: |-
                    게시글 파일 업로드 id
                    - 최소 1개
                    - 최대 10개
                    - 첫 번째 이미지가 썸네일 이미지로 선정됩니다.
                  items:
                    type: integer
                  example: [1, 2, 3]
              required:
                - title
                - content
                - postImageFileUploadIds
      responses:
        201:
          description: '201'
          headers:
            Location:
              schema:
                type: string
              description: Location
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

  /api/v1/posts/{postId}:
    get:
      security:
        - bearerToken: [ ]
      tags:
        - 커뮤니티
      summary: 커뮤니티 게시글 상세내용 조회
      description: |-
        커뮤니티에 등록된 유저의 게시글 상세내용을 조회합니다.
      parameters:
        - in: path
          name: postId
          schema:
            type: integer
          required: true
          description: 게시글 id
      responses:
        200:
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      post:
                        type: object
                        properties:
                          createdUser:
                            type: object
                            description: 게시글 작성자
                            properties:
                              id:
                                type: integer
                                description: 유저 id
                                example: 1
                              nickname:
                                type: string
                                description: 유저 닉네임
                                example: sinbom
                              profileImageUrl:
                                type: integer
                                description: 프로필 이미지 url
                                example: https://avatars.githubusercontent.com/u/52724515
                            required:
                              - id
                              - nickname
                              - profileImageUrl
                          id:
                            type: integer
                            description: 게시글 id
                            example: 1
                          postImageUrls:
                            type: array
                            description: |-
                              게시글 이미지 url
                              - 첫 번째 이미지가 썸네일 이미지로 선정됩니다.
                            items:
                              type: string
                            example: [https://avatars.githubusercontent.com/u/52724515, https://avatars.githubusercontent.com/u/52724515]
                          title:
                            type: string
                            description: 제목
                            example: 바다 거북이 본 날
                          content:
                            type: string
                            description: 내용
                            example: 바다 거북이 본 날
                          createDate:
                            type: string
                            description: 작성일
                            example: 2024.03.30
                          thumbsUpCount:
                            type: integer
                            description: 받은 좋아요 수
                            example: 40
                          commentCount:
                            type: integer
                            description: 댓글 수
                            example: 39
                          userActionHistory:
                            type: object
                            description: 게시글에 대한 유저의 이력
                            properties:
                              thumbsUpped:
                                type: boolean
                                description: 좋아요 여부
                                example: true
                              reported:
                                type: boolean
                                description: 신고 여부
                                example: false
                            required:
                              - thumbsUpped
                              - reported
                        required:
                          - user
                          - id
                          - postImageUrls
                          - title
                          - content
                          - createDate
                          - thumbsUpCount
                          - commentCount
                          - userActionHistory
                    required:
                      - post
                required:
                  - data
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

  /api/v1/posts/{postId}/report:
    post:
      security:
        - bearerToken: [ ]
      tags:
        - 커뮤니티
      summary: 커뮤니티 게시글 신고
      description: |-
        커뮤니티에 등록된 유저의 게시글을 신고합니다.
      parameters:
        - in: path
          name: postId
          schema:
            type: integer
          required: true
          description: 게시글 id
      responses:
        200:
          description: '200'
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

  /api/v1/posts/{postId}/thumbs-up:
    post:
      security:
        - bearerToken: [ ]
      tags:
        - 커뮤니티
      summary: 커뮤니티 게시글 좋아요
      description: |-
        커뮤니티에 등록된 유저의 게시글을 좋아합니다.
      parameters:
        - in: path
          name: postId
          schema:
            type: integer
          required: true
          description: 게시글 id
      responses:
        200:
          description: '200'
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

  /api/v1/posts/{postId}/thumbs-sideways:
    post:
      security:
        - bearerToken: [ ]
      tags:
        - 커뮤니티
      summary: 커뮤니티 게시글 좋아요 취소
      description: |-
        커뮤니티에 등록된 유저의 게시글 좋아요를 취소합니다.
      parameters:
        - in: path
          name: postId
          schema:
            type: integer
          required: true
          description: 게시글 id
      responses:
        200:
          description: '200'
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

  /api/v1/posts/{postId}/comments:
    get:
      security:
        - bearerToken: [ ]
      tags:
        - 커뮤니티
      summary: 커뮤니티 게시글 댓글 목록 조회
      description: |-
        커뮤니티에 등록된 유저 게시글의 댓글 목록을 조회합니다.
        
        최근 등록 내림차 순으로 정렬되어 조회됩니다.
      parameters:
        - in: path
          name: postId
          schema:
            type: integer
          required: true
          description: 게시글 id
        - in: query
          name: limit
          schema:
            type: integer
          description: |-
            조회 갯수
            - 기본 값 20
            - 최소 값 10
            - 최대 값 100
        - in: query
          name: lastId
          schema:
            type: integer
          description: |-
            마지막 조회 댓글 id
            - 만약 100을 입력했다면 다음 조회는 99부터 입니다.
      responses:
        200:
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      comments:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: 댓글 id
                            example: 1
                          content:
                            type: string
                            description: 내용
                            example: 바다 거북이 댇은 바빠서 안왔다고 합니다.
                        required:
                          - id
                          - content
                    required:
                      - comments
                required:
                  - data
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

    post:
      security:
        - bearerToken: [ ]
      tags:
        - 커뮤니티
      summary: 커뮤니티 게시글 댓글 작성
      description: |-
        커뮤니티에 등록된 유저 게시글에 댓글을 작성합니다.
      parameters:
        - in: path
          name: postId
          schema:
            type: integer
          required: true
          description: 게시글 id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: integer
                  description: 게시글 내용
                  example: 왜 바다 거북이 댇은 없나요 ㅠㅠ?
              required:
                - content
      responses:
        200:
          description: '200'
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

  /api/v1/posts/{postId}/comments/{commentId}/report:
    get:
      security:
        - bearerToken: [ ]
      tags:
        - 커뮤니티
      summary: 커뮤니티 게시글 댓글 신고
      description: |-
        커뮤니티에 등록된 유저 게시글의 댓글을 신고합니다.
      parameters:
        - in: path
          name: postId
          schema:
            type: integer
          required: true
          description: 게시글 id
        - in: path
          name: commentId
          schema:
            type: integer
          required: true
          description: 댓글 id
      responses:
        200:
          description: '200'
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

  /api/v1/notices:
    get:
      security:
        - bearerToken: [ ]
      tags:
        - 기타
      summary: 공지사항 조회
      description: |-
        공지사항을 목록을 조회합니다.
        
        최근 등록 내림차 순으로 정렬되어 조회됩니다.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: |-
            조회 갯수
            - 기본 값 20
            - 최소 값 10
            - 최대 값 100
        - in: query
          name: lastId
          schema:
            type: integer
          description: |-
            마지막 조회 공지사항 id
            - 만약 100을 입력했다면 다음 조회는 99부터 입니다.
      responses:
        200:
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      notices:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: 공지사항 id
                            title:
                              type: string
                              description: 제목
                            content:
                              type: string
                              description: 내용
                            createDate:
                              type: string
                              description: 작성일
                          required:
                            - id
                            - title
                            - content
                            - createDate
                        example:
                          - id: 3
                            title: 더 좋은 서비스 제공을 위해 앱 최소 지원 버전이 변경될 예정이에요.
                            content: 사실 구라입니다 이거 보여주려고 어그로 끌었습니다.
                            createDate: 2024.03.30
                          - id: 2
                            title: 더 좋은 서비스 제공을 위해 앱 최소 지원 버전이 변경될 예정이에요.
                            content: 사실 구라입니다 이거 보여주려고 어그로 끌었습니다.
                            createDate: 2024.03.30
                          - id: 1
                            title: 더 좋은 서비스 제공을 위해 앱 최소 지원 버전이 변경될 예정이에요.
                            content: 사실 구라입니다 이거 보여주려고 어그로 끌었습니다.
                            createDate: 2024.02.12
                    required:
                      - notices
                required:
                  - data
        4XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error4XXExample:
                  $ref: '#/components/examples/ProblemDetailError4XXExample'
        5XX:
          description: ''
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailErrorResponse'
              examples:
                RFC7807Error5XXExample:
                  $ref: '#/components/examples/ProblemDetailError5XXExample'

components:
  securitySchemes:
    bearerToken:
      type: http
      scheme: bearer
      description: JWT 서명 토큰(access_token)

  schemas:
    Oauth2ErrorResponse:
      type: object
      externalDocs:
        description: RFC-6749 Oauth2 error response
        url: https://datatracker.ietf.org/doc/html/rfc6749#section-4.1.2.1
      properties:
        error:
          type: string
        error_description:
          type: string
        error_uri:
          type: string
          example: https://datatracker.ietf.org/doc/html/rfc6749#section-5.2
      required:
        - error
    ProblemDetailErrorResponse:
      type: object
      externalDocs:
        description: RFC-7807 problem detail error response
        url: https://datatracker.ietf.org/doc/html/rfc7807#section-3.1
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
        filedErrors:
          type: array
          description: 커스텀 에러
          items:
            type: object
            properties:
              detailMessage:
                type: string
                description: 상세 메시지
              field:
                type: string
                description: 유효하지 않은 필드명
              rejectedValue:
                type: string
                description: 유효하지 않은 값
              bindingFailure:
                type: string
                description: 적용 여부
              code:
                type: string
                description: 코드
      required:
        - type
        - title
        - detail
        - instance

  examples:
    Oauth2ErrorInvalidRequestExample:
      value:
        error: invalid_request
    Oauth2ErrorServerErrorExample:
      value:
        error: server_error
        error_description: The token generator failed to generate the refresh token.
        error_uri: https://datatracker.ietf.org/doc/html/rfc6749#section-5.2
    ProblemDetailError4XXExample:
      value:
        type: about:blank
        title: Bad Request
        status: 400
        detail: Invalid request content.
        instance: /api/v1/example
        fieldErrors:
          detailMessage: asd
          field: name
          rejectedValue: null
          bindingFailure: false
          code: NotBlank
    ProblemDetailError5XXExample:
      value:
        type: about:blank
        title: Internal Server Error
        status: 500
        detail: Internal Server Error
        instance: /api/v1/example

servers:
  - url: https://pp-api.kro.kr
    description: PP Rest API Server